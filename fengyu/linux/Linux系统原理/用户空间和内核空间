1. Linux为什么划分用户空间和内核空间？划分的意义是什么？
2. 什么是内核？内核权限


#### 用户空间和内核空间

CPU指令中部分的指令，如果使用不当将导致系统崩溃。为了降低风险，将CPU指定划分为**特权指定**和**非特权指令**，对于危险的指令，只允许操作系统使用。Intel将CPU指令划分为Ring0 ~ Ring3共4个级别，Linux只使用了Ring0和Ring3两个运行级别。

当进程运行在内核空间时就处于内核态，而进程运行在用户空间时则处于用户态。

在内核态下，进程运行在内核地址空间中，CPU可以指定任何指令。运行的代码不受限制

用户状态下，进程运行在用户地址空间中，被执行的代码要接收CPU的检查。只能访问用户态下允许的地址空间，只能对`任务状态段(TTS)`中`I/O许可位图(I/O Permission Bitmap)`中规定的可访问端口进行访问。

区分内核空间和用户空间本质上是要提高操作系统的稳定性及可用性。

#### 
所有的系统资源管理都是在内核空间中完成。比如，读写磁盘文件、分配回收内存。

进程通过“**系统调用**”方式从用户态进入内核态

用户空间代码只有通过内核暴露的系统调用接口(System Call Interface)才能使用系统中的硬件资源。


